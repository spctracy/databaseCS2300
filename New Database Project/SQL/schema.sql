PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS users (
  UserID   INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50)     NOT NULL UNIQUE,
  info     TEXT,
  created  DATETIME        DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS tasks (
  TaskID   INT AUTO_INCREMENT PRIMARY KEY,
  UserID   INT             NOT NULL,
  FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS studySession (
  SessionID INT AUTO_INCREMENT PRIMARY KEY,
  UserID    INT             NOT NULL,
  FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS studyGroup (
  GroupID   INT AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS groupStudySession (
  GroupSessionID INT AUTO_INCREMENT PRIMARY KEY,
  GroupID        INT             NOT NULL,
  FOREIGN KEY (GroupID) REFERENCES studyGroup(GroupID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reminder (
  ReminderID INT AUTO_INCREMENT PRIMARY KEY,
  UserID     INT             NOT NULL,
  TaskID     INT             NOT NULL,
  FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE,
  FOREIGN KEY (TaskID) REFERENCES tasks(TaskID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS analytics (
  AnalyticsID INT AUTO_INCREMENT PRIMARY KEY,
  UserID      INT             NOT NULL,
  FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE